/* lightboxSSA.scss */

// LightboxSSA v2.50
// Copyright 2020 Chris Dennis

//    This file is part of LightboxSSA.
//
//    LightboxSSA is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    LightboxSSA is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Foobar.  If not, see <https://www.gnu.org/licenses/>.

// TODO
// -- see https://freebiesupply.com/blog/css-arrows/ for fancy responsive < > arrows

// ?? Use will-change: transform, opacity;  to make sure fadeTo works???

// Variables
$imageBorder: 1vh;
$imageRadius: ($imageBorder / 2);
$zstart: 10;

body.lb-disable-scrolling {
    overflow: hidden;
}

[data-lightbox] {
    cursor: pointer;
}

#lb-overlay {
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    z-index: $zstart;
    background: gray;
    opacity: 0; // initially
    cursor: url(../images/closeCursorSSA.png) 13 14, pointer;
}
#lb-nav {
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    z-index: $zstart+1;
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none;
    //touch-action: none;
    opacity: 1;
}
#lb-prev { //, #lb-image1-prev, #lb-image2-prev {
//?    opacity: 1;
//    background: green; opacity: 0.3;
    height: 50%;
    width: 50%;
    z-index: $zstart+2;
    pointer-events: auto;
    cursor: url(../images/prevCursorSSA.png) 2 17, pointer;
}
#lb-next { // , #lb-image1-next, #lb-image2-next {
//?    opacity: 1;
//    background: green; opacity: 0.3;
    height: 50%;
    width: 50%;
    z-index: $zstart+2;
    pointer-events: auto;
    cursor: url(../images/nextCursorSSA.png) 18 17, pointer;
}

.lb-flex {
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none;
    //touch-action: none;
    z-index: $zstart+3;
}

figure.lb-figure {
  display: block;
  position: relative;
  margin: 0;
  z-index: $zstart+4;
  figcaption {
    position: absolute;
    left: $imageBorder;
    bottom: $imageBorder;
    background-color: rgba(255, 255, 255, 0.6);
    width: calc(100% - #{2 * $imageBorder});
    max-height: calc(100% - #{2 * $imageBorder});
    text-align: center;
    z-index: $zstart+6;
  }
}

#lb-figure1, #lb-figure2 {
    /*
    max-width: 90vw;     // These may get adjusted by JS
    max-height: 90vh;
    */
}

$onImageClickAreaHeight: 100%;
#lb-image1-prev, #lb-image2-prev {
  position: absolute;
  //border: 1px blue solid;
  width: 20%;
  height: $onImageClickAreaHeight;
  left: 0;
  top: #{(100% - $onImageClickAreaHeight) / 2};
  cursor: url(../images/prevCursorSSA.png) 2 17, pointer;
  z-index: $zstart+7;
}
#lb-image1-next, #lb-image2-next {
  position: absolute;
  //border: 1px red solid;
  width: 20%;
  height: $onImageClickAreaHeight;
  right: 0;
  top: #{(100% - $onImageClickAreaHeight) / 2};
  cursor: url(../images/nextCursorSSA.png) 18 17, pointer;
  z-index: $zstart+7;
}

#lb-image1, #lb-image2 {
    border: white $imageBorder solid;
    border-radius: $imageRadius;
    // no position: absolute;
    max-width: 90vw;     // These may get adjusted by JS
    max-height: 90vh;
    z-index: $zstart+5;
}
#lb-image1 {
    pointer-events: none;
}
#lb-image2 {
    pointer-events: auto; /* initially */ // FIXME check which is used first -- is this needed?
}

#lb-overlay *:hover {
    border: solid 1px red;
}
